{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,uDAQAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,MAAO,QACPC,SAAU,YACVC,SAAU,OACVC,QAAS,IAGSC,SAASC,cAAc,SAC/BC,iBAAiB,UAM7B,SAAsBC,GACpBA,EAAMC,iBAON,IALA,IAAMC,EAAqBC,OAAOC,EAAcC,OAC1CC,EAAwBH,OAAOI,EAAiBF,OAChDG,EAAwBL,OAAOM,EAAkBJ,OAG9CK,EAAI,EAAGA,GAAKR,EAAoBQ,GAAK,EAE5CC,EAAcD,EADHF,EAAwBF,GAAyBI,EAAI,IAE7DE,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUoB,EAAKD,EAALC,MACjBxB,EAAAF,GAASG,OAAOwB,QAAQ,qBAAoCC,OAAftB,EAAS,QAAYsB,OAANF,EAAM,M,IAEnEG,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUoB,EAAKD,EAALC,MAClBxB,EAAAF,GAASG,OAAO2B,QAAQ,oBAAmCF,OAAftB,EAAS,QAAYsB,OAANF,EAAM,M,OAnBzE,IAAMV,EAAgBP,SAASC,cAAc,wBACvCW,EAAoBZ,SAASC,cAAc,uBAC3CS,EAAmBV,SAASC,cAAc,sBAsBhD,SAASa,EAAcjB,EAAUoB,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAE7B,WAAUoB,UAEpBU,EAAO,CAAE9B,WAAUoB,S,GAEpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { Block } from 'notiflix/build/notiflix-block-aio';\n\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'right-top',\n  distance: '10px',\n  opacity: 1,\n});\n\nconst formElement = document.querySelector('.form');\nformElement.addEventListener('submit', onFormSubmit);\n\nconst amountElement = document.querySelector('input[name=\"amount\"]');\nconst firstDelayElement = document.querySelector('input[name=\"delay\"]');\nconst DelayStepElement = document.querySelector('input[name=\"step\"]');\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const amountElementValue = Number(amountElement.value);\n  const delayStepElementValue = Number(DelayStepElement.value);\n  const firstStepElementValue = Number(firstDelayElement.value);\n\n  let delaySum = 0;\n  for (let i = 1; i <= amountElementValue; i += 1) {\n    delaySum = firstStepElementValue + delayStepElementValue * (i - 1);\n    createPromise(i, delaySum)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$parcel$interopDefault","Notify","init","width","position","distance","opacity","document","querySelector","addEventListener","event","preventDefault","amountElementValue","Number","$ce04d3a99e08e73b$var$amountElement","value","delayStepElementValue","$ce04d3a99e08e73b$var$DelayStepElement","firstStepElementValue","$ce04d3a99e08e73b$var$firstDelayElement","i","$ce04d3a99e08e73b$var$createPromise","then","param","delay","success","concat","catch","failure","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.095c89ef.js.map"}